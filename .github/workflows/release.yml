name: Release Go Binary

on:
  release:
    types: [created]

permissions:
  contents: write # Needed to upload release assets

jobs:
  build:
    name: Build Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Add other OS/Arch combinations as needed
        # Example:
        # goos: [linux, windows, darwin]
        # goarch: [amd64, arm64]
        # include:
        #   - goos: darwin
        #     goarch: arm64
        #   - goos: windows
        #     goarch: amd64
        goos: [linux]
        goarch: [amd64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21' # Specify your Go version

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          BINARY_NAME="codex-go"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            BINARY_NAME="${BINARY_NAME}.exe"
          fi
          echo "Building ${BINARY_NAME} for ${{ matrix.goos }}/${{ matrix.goarch }}..."
          go build -v -o "${BINARY_NAME}" ./cmd/codex
          echo "BINARY_PATH=${BINARY_NAME}" >> $GITHUB_ENV
          echo "ASSET_NAME=${BINARY_NAME}-${{ matrix.goos }}-${{ matrix.goarch }}" >> $GITHUB_ENV

      # Optional: Generate checksum
      - name: Generate checksum
        id: checksum
        run: |
          sha256sum "${{ env.BINARY_PATH }}" > "${{ env.BINARY_PATH }}.sha256"
          echo "CHECKSUM_PATH=${{ env.BINARY_PATH }}.sha256" >> $GITHUB_ENV
          echo "CHECKSUM_ASSET_NAME=${{ env.ASSET_NAME }}.sha256" >> $GITHUB_ENV

      # Optional: Create archive (tar.gz for non-windows, zip for windows)
      - name: Create Archive
        run: |
          ARCHIVE_NAME="${{ env.ASSET_NAME }}"
          if [ "${{ matrix.goos }}" == "windows" ]; then
            ARCHIVE_NAME="${ARCHIVE_NAME}.zip"
            zip "${ARCHIVE_NAME}" "${{ env.BINARY_PATH }}" "${{ env.CHECKSUM_PATH }}"
          else
            ARCHIVE_NAME="${ARCHIVE_NAME}.tar.gz"
            tar -czvf "${ARCHIVE_NAME}" "${{ env.BINARY_PATH }}" "${{ env.CHECKSUM_PATH }}"
          fi
          echo "ARCHIVE_PATH=${ARCHIVE_NAME}" >> $GITHUB_ENV

      - name: Upload Release Asset (Archive)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ env.ARCHIVE_PATH }}
          asset_name: ${{ env.ARCHIVE_PATH }}
          asset_content_type: application/octet-stream

      # - name: Upload Release Asset (Binary - Uncomment if needed)
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ github.event.release.upload_url }}
      #     asset_path: ${{ env.BINARY_PATH }}
      #     asset_name: ${{ env.ASSET_NAME }}
      #     asset_content_type: application/octet-stream

      # - name: Upload Release Asset (Checksum - Uncomment if needed)
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ github.event.release.upload_url }}
      #     asset_path: ${{ env.CHECKSUM_PATH }}
      #     asset_name: ${{ env.CHECKSUM_ASSET_NAME }}
      #     asset_content_type: text/plain 